{"version":3,"file":"static/js/637.3e14de86.chunk.js","mappings":"iOACA,EAAmC,sCAAnC,EAAuF,iCAAvF,EAAiI,4BAAjI,EAAgL,sCAAhL,EAAiO,8BAAjO,EAAyQ,6BAAzQ,EAAyT,sCAAzT,EAA2W,+BAA3W,EAAga,yCAAha,EAAqe,+CAAre,EAA+hB,8BAA/hB,EAA8kB,oCAA9kB,EAA+nB,gCAA/nB,EAA2qB,+BAA3qB,EAA6tB,sC,UCA7tB,EAAyB,8B,SC4CzB,EAxC+B,SAACA,GAE9B,IAAAC,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC1BI,GAA0BL,EAAAA,EAAAA,UAASF,EAAMQ,QAAOC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAA3CC,EAAMC,EAAA,GAAEC,EAASD,EAAA,IAEtBE,EAAAA,EAAAA,YAAW,WACTD,EAAUV,EAAMQ,OAClB,GAAG,CAACR,EAAMQ,SAeV,OACEI,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIR,IACAS,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAUC,QAjBV,WACvBX,GAAY,EACd,EAe+DO,SACpDb,EAAMQ,QAAU,YAItBH,IACCS,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,SAAOI,SAfQ,SAACC,GACtBT,EAAUS,EAAEC,cAAcC,MAC5B,EAa2CC,WAAW,EAAMC,OApBjC,WACzBjB,GAAY,GACZN,EAAMwB,iBAAiBhB,EACzB,EAiB0Fa,MAAOb,QAKnG,E,mBCSA,GALiCiB,EAAAA,EAAAA,GAAU,CACzCC,KAAM,eACNC,oBAAoB,EACpBC,kBAAkB,GAHaH,EAzCT,SAAHI,GAAwC,IAAnCC,EAAYD,EAAZC,aAAcC,EAAOF,EAAPE,QAASC,EAAKH,EAALG,MAC/C,OAAOpB,EAAAA,EAAAA,MAAA,QAAMqB,SAAWH,EAAef,UAAWC,EAAYH,SAAA,EAC5DD,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAmBH,SAAA,EACjCC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAWH,UACxBqB,EAAAA,EAAAA,IAAYC,EAAAA,GAAO,GAAI,WAAY,gBAEtCrB,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAUH,UACvBqB,EAAAA,EAAAA,IAAYC,EAAAA,GAAO,GAAI,UAAW,eAErCvB,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAsBH,SAAA,EACnCqB,EAAAA,EAAAA,IAAYC,EAAAA,GAAO,GAAI,iBAAkB,KAAM,CAACC,KAAM,aAAa,wBAGtEtB,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAA4BH,UACzCqB,EAAAA,EAAAA,IAAYC,EAAAA,GAAO,GAAI,4BAA6B,mBAIzDvB,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAWH,SAAA,EACzBC,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAiBH,SAAC,eACnCC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAaH,SAC1BwB,OAAOC,KAAKP,EAAQQ,UAAUC,KAAI,SAAAC,GACjC,OAAO7B,EAAAA,EAAAA,MAAA,OAAeG,UAAWC,EAAmBH,SAAA,EACpDC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAa0B,IAAKH,EAASE,GAAME,IAAI,cACpDT,EAAAA,EAAAA,IAAYC,EAAAA,GAAO,GAAI,YAAcM,EAAKA,KAF1BA,EAInB,UAIJ7B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,SACPmB,IACClB,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAmBH,SAChCmB,SAKX,I,yECzBaO,EAAW,CACtB,S,q1QACA,Q,q/PACA,G,+CACA,Q,oDACA,S,q6VACA,U,sDACA,Q,qjPACA,O,oDAGIK,EAAU,SAAHf,GAAuB,IAAlBgB,EAAIhB,EAAJgB,KAAMC,EAAKjB,EAALiB,MACtB,OAAOlC,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAmBH,SAAA,EACxCC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAa0B,IAAKI,EAAOH,IAAI,cAC7C7B,EAAAA,EAAAA,KAAA,QAAAD,SAAOgC,GAAQ,QAEnB,EAEME,EAAc,SAAHC,GAAwB,IAAnB3B,EAAK2B,EAAL3B,MAAOyB,EAAKE,EAALF,MAC3B,OAAOhC,EAAAA,EAAAA,KAAC8B,EAAO,CAACC,KAAMxB,EAAOyB,MAAOA,GACtC,EAEMG,EAAc,SAAHC,GAAmE,IAA9DnB,EAAOmB,EAAPnB,QAASoB,EAAOD,EAAPC,QAAS3C,EAAM0C,EAAN1C,OAAQgB,EAAgB0B,EAAhB1B,iBAAkBlB,EAAW4C,EAAX5C,YAChE,OAAOM,EAAAA,EAAAA,MAAAwC,EAAAA,SAAA,CAAAvC,SAAA,EACLD,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAmBH,SAAA,EACjCC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAWH,SACxBkB,EAAQsB,YAEXvC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAUH,SACvBkB,EAAQuB,WAEXxC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACyC,EAAsB,CAAC/C,OAAQA,EAAQgB,iBAAkBA,OAE5DV,EAAAA,EAAAA,KAAA,OAAAD,SACGkB,EAAQyB,gBACL1C,EAAAA,EAAAA,KAACiC,EAAW,CAAC1B,MAAO,wBAAyByB,MAAOW,KACpD3C,EAAAA,EAAAA,KAACiC,EAAW,CAAC1B,MAAO,4BAA6ByB,M,8/XAGvDhC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAA4BH,SACzCkB,EAAQ2B,gCAIb9C,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAWH,SAAA,EACzBC,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAiBH,SAAC,eACnCC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAaH,SAC1BwB,OAAOC,KAAKP,EAAQQ,UAAUC,KAAI,SAAAC,GACjC,OAAO3B,EAAAA,EAAAA,KAAC8B,EAAO,CAACC,KAAMd,EAAQQ,SAASE,GAAMK,MAAOP,EAASE,IAAWA,EAC1E,SAIHU,IAAWrC,EAAAA,EAAAA,KAAA,OAAAD,UAAKC,EAAAA,EAAAA,KAAA,UAAQG,QAASX,EAAYO,SAAC,aAEnD,EAmDA,EAjDoB,SAAH8C,GAA8E,IAAzE5B,EAAO4B,EAAP5B,QAASoB,EAAOQ,EAAPR,QAASS,EAASD,EAATC,UAAWC,EAAWF,EAAXE,YAAarD,EAAMmD,EAANnD,OAAQgB,EAAgBmC,EAAhBnC,iBAEtEvB,GAAwCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlD6D,EAAa3D,EAAA,GAAE4D,EAAgB5D,EAAA,GACpCI,GAA8BL,EAAAA,EAAAA,WAAS,GAAMO,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAxCF,EAAQI,EAAA,GAAEH,EAAWG,EAAA,GAa1B,OAAIsB,GAKFnB,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAmBH,SAAA,EAEjCC,EAAAA,EAAAA,KAAA,OAAAD,UACED,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EACXgD,YAAa,WAAQD,GAAiB,EAAM,EAC5CE,WAAY,WAAQF,GAAiB,EAAO,EAAElD,SAAA,EACjDC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAU0B,IAAKX,EAAQmC,OAAOC,OAASC,EAAWzB,IAAI,QACrEQ,GAAWW,IAAiBhD,EAAAA,EAAAA,KAAA,SAAOsB,KAAK,OAAOlB,SAvB5B,SAACC,GACxBA,EAAEkD,OAAOC,MAAMC,QAChBX,EAAUzC,EAAEkD,OAAOC,MAAM,GAE7B,SAuBKjE,GACGS,EAAAA,EAAAA,KAAC0D,EAAe,CAACC,cAAe1C,EACfA,QAASA,EACTE,SAxBR,SAACyC,GAChBb,EAAYa,GACTC,MAAK,WAAQrE,GAAY,EAAO,GACrC,EAsByBE,OAAQA,EACRgB,iBAAkBA,KACnCV,EAAAA,EAAAA,KAACmC,EAAW,CAAClB,QAASA,EACToB,QAASA,EACT3C,OAAQA,EACRgB,iBAAkBA,EAClBlB,YAAc,WAAQA,GAAY,EAAM,QAzBpDQ,EAAAA,EAAAA,KAAC8D,EAAAA,EAAS,GA8BrB,E,UC5HA,EAAwB,uBAAxB,EAA6D,6BAA7D,EAAoG,yBCApG,EAAuB,mBCYvB,EAVa,SAAC5E,GACZ,OACEY,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAOH,SAAA,EACrBC,EAAAA,EAAAA,KAAA,OAAK4B,IAAI,+BAA+BC,IAAI,SAC5C7B,EAAAA,EAAAA,KAAA,QAAAD,SAAOb,EAAM6E,WACbjE,EAAAA,EAAAA,MAAA,UAAAC,SAAA,CAASb,EAAM8E,WAAW,iCAGhC,E,UCJMC,GAAeC,EAAAA,EAAAA,GAAiB,KAWhCC,GAAmBxD,EAAAA,EAAAA,GAAU,CAACC,KAAM,sBAAjBD,EATL,SAAHI,GAAwB,IAAnBC,EAAYD,EAAZC,aACpB,OACElB,EAAAA,EAAAA,MAAA,QAAMqB,SAAUH,EAAcf,UAAWC,EAAUH,SAAA,EAChDqB,EAAAA,EAAAA,IAAYgD,EAAAA,GAAU,CAACC,EAAAA,EAAUJ,GAAe,cAAe,oBAChEjE,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,eAGd,IAsBA,EAlBgB,SAACb,GACf,IAAIoF,EAAgBpF,EAAMqF,MAAM7C,KAAI,SAAA8C,GAAC,OAAIxE,EAAAA,EAAAA,KAACyE,EAAI,CAAYV,QAASS,EAAET,QAASC,WAAYQ,EAAER,YAAxCQ,EAAEE,GAAoD,IAM1G,OACE5E,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAQH,SAAA,EACtBD,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAcH,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAACmE,EAAgB,CAAChD,SARP,SAACyC,GAChB1E,EAAMyF,iBAAiBf,EAASgB,YAClC,OAQKN,IAGP,E,UCxBA,GAFyBO,EAAAA,EAAAA,KAND,SAACC,GACvB,MAAO,CACLP,MAAOO,EAAMC,YAAYR,MAE7B,GAEkD,CAAEI,iBAAAA,EAAAA,IAA3BE,CAA+CG,GCQxE,EAdgB,SAAC9F,GACf,OACEY,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACiF,EAAW,CAAChE,QAAS/B,EAAM+B,QACfvB,OAAQR,EAAMQ,OACdgB,iBAAkBxB,EAAMwB,iBACxB2B,QAASnD,EAAMmD,QACfS,UAAW5D,EAAM4D,UACjBC,YAAa7D,EAAM6D,eAChC/C,EAAAA,EAAAA,KAACkF,EAAgB,MAGvB,E,UCMA,MAhBA,SAAoBC,GAalB,OAZA,SAAiCjG,GAC/B,IAAIkG,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MACb,OACEzF,EAAAA,EAAAA,KAACmF,GAASO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJxG,GAAK,IACTyG,OAAQ,CAAEP,SAAAA,EAAUE,SAAAA,EAAUE,OAAAA,KAGpC,CAGF,E,WCZMI,GAAgB,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAAA,SAAAA,IAAA,IAAAK,GAAAC,EAAAA,EAAAA,GAAA,KAAAN,GAAA,QAAAO,EAAAC,UAAA3C,OAAA4C,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAGnB,OAHmBN,EAAAF,EAAAS,KAAAC,MAAAV,EAAA,OAAAW,OAAAL,KACpBvB,MAAQ,CACN6B,UAAU,GACXV,CAAA,CAiCA,OAjCAW,EAAAA,EAAAA,GAAAhB,EAAA,EAAAjE,IAAA,iBAAApB,MAED,WACE,IAAAsG,EAA4DC,KAAK5H,MAA1DyG,EAAMkB,EAANlB,OAAQoB,EAAUF,EAAVE,WAAYC,EAAcH,EAAdG,eAAgBC,EAAaJ,EAAbI,cACvCC,EAASvB,EAAOH,OAAO0B,OACtBA,IACHA,EAASH,IAEPD,KAAKK,SAAS,CAAER,UAAU,IAI9BK,EAAeE,GACfD,EAAcC,EAChB,GAAC,CAAAvF,IAAA,oBAAApB,MAED,WACEuG,KAAKM,gBACP,GAAC,CAAAzF,IAAA,qBAAApB,MAED,SAAmB8G,GACdP,KAAK5H,MAAMyG,OAAOH,OAAO0B,SAAWG,EAAU1B,OAAOH,OAAO0B,QAC7DJ,KAAKM,gBAET,GAAC,CAAAzF,IAAA,SAAApB,MAED,WACE,OAAGuG,KAAKhC,MAAM6B,UACL3G,EAAAA,EAAAA,KAACsH,EAAAA,GAAQ,CAACC,GAAI,YAGhBvH,EAAAA,EAAAA,KAACwH,GAAO9B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKoB,KAAK5H,OAAK,IACdmD,SAAUyE,KAAK5H,MAAMyG,OAAOH,OAAO0B,SACrD,KAACtB,CAAA,CApCmB,CAAS6B,EAAAA,WA6C/B,IAAeC,EAAAA,GAAAA,KACb7C,EAAAA,EAAAA,KAPoB,SAACC,GAAK,MAAM,CAChC7D,QAAS6D,EAAMC,YAAY9D,QAC3BvB,OAAQoF,EAAMC,YAAYrF,OAC1BqH,WAAYjC,EAAM6C,KAAKT,OACxB,GAG0B,CAAEF,eAAAA,EAAAA,GAAgBC,cAAAA,EAAAA,GAAevG,iBAAAA,EAAAA,GAAkBoC,UAAAA,EAAAA,GAAWC,YAAAA,EAAAA,KACvF6E,EAFF,CAGEhC,G","sources":["webpack://reactsw_1/./src/components/Profile/PropfileInfo/ProfileInfo.module.css?4c2c","webpack://reactsw_1/./src/components/Profile/PropfileInfo/ProfileStatus.module.css?5d85","components/Profile/PropfileInfo/ProfileStatusWithHooks.jsx","components/Profile/PropfileInfo/ProfileDataForm.jsx","components/Profile/PropfileInfo/ProfileInfo.jsx","webpack://reactsw_1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://reactsw_1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","ReactRouter/withRouter.js","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profileInfoBlock\":\"ProfileInfo_profileInfoBlock__VH-H8\",\"avatarBlock\":\"ProfileInfo_avatarBlock__Cs0Il\",\"avatar\":\"ProfileInfo_avatar__W6z7r\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__z2ezm\",\"fullName\":\"ProfileInfo_fullName__QuMXS\",\"aboutMe\":\"ProfileInfo_aboutMe__pi1O0\",\"imgPlusTextBlock\":\"ProfileInfo_imgPlusTextBlock__1mBaX\",\"smallIcon\":\"ProfileInfo_smallIcon__AEQiv\",\"lookingForAJobBlock\":\"ProfileInfo_lookingForAJobBlock__92h1D\",\"lookingForAJobDescription\":\"ProfileInfo_lookingForAJobDescription__SmAWz\",\"contacts\":\"ProfileInfo_contacts__Ic7PB\",\"contactsHeader\":\"ProfileInfo_contactsHeader__+PRm1\",\"linksBlock\":\"ProfileInfo_linksBlock__9UyNh\",\"formBlock\":\"ProfileInfo_formBlock__DqHKt\",\"formSummaryError\":\"ProfileInfo_formSummaryError__3yzt9\"};","// extracted by mini-css-extract-plugin\nexport default {\"status\":\"ProfileStatus_status__umzCT\"};","import React from 'react';\r\nimport s from './ProfileStatus.module.css'\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n  \r\n  useEffect( () => {\r\n    setStatus(props.status);\r\n  }, [props.status] );\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateUserStatus(status);\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!editMode &&\r\n        <div>\r\n          <span className={s.status} onClick={ activateEditMode }>\r\n            {props.status || '-----'}\r\n          </span>\r\n        </div>\r\n      }\r\n      {editMode &&\r\n        <div>\r\n          <input onChange={ onStatusChange } autoFocus={true} onBlur={ deactivateEditMode } value={status} />\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport { reduxForm } from 'redux-form';\r\nimport { Input, createField } from '../../common/FormsControls/FormsControls';\r\nimport { contacts } from './ProfileInfo';\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n  return <form onSubmit={ handleSubmit } className={s.formBlock}>\r\n    <div className={s.descriptionBlock}>\r\n      <div className={s.fullName}>\r\n        {createField(Input, [], 'fullName', 'Full name') }\r\n      </div>\r\n      <div className={s.aboutMe}>\r\n        {createField(Input, [], 'aboutMe', 'About me') }\r\n      </div>\r\n      <div className={s.lookingForAJobBlock}>\r\n        {createField(Input, [], 'lookingForAJob', null, {type: 'checkbox'})}\r\n        Looking for a job\r\n      </div>\r\n      <div className={s.lookingForAJobDescription}>\r\n        {createField(Input, [], 'lookingForAJobDescription', 'My skills') }\r\n      </div>\r\n    </div>\r\n\r\n    <div className={s.contacts}>\r\n      <span className={s.contactsHeader}>Contacts:</span>\r\n      <div className={s.linksBlock}>\r\n        {Object.keys(profile.contacts).map(key => {\r\n          return <div key={key} className={s.imgPlusTextBlock}>    \r\n          <img className={s.smallIcon} src={contacts[key]} alt='link-img' />\r\n          {createField(Input, [], 'contacts.' + key, key)}\r\n        </div>\r\n        })}\r\n      </div>\r\n    </div>\r\n\r\n    <div>\r\n      <button>Save</button>\r\n      {error &&\r\n        <div className={s.formSummaryError}>\r\n          {error}\r\n        </div>\r\n      }\r\n    </div>\r\n  </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({\r\n  form: 'edit-profile',\r\n  enableReinitialize: true,\r\n  destroyOnUnmount: false})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React, { useState } from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\n\r\nimport userPhoto from '../../../assets/images/userPhoto.jpg'\r\nimport magnifyingGlass from '../../../assets/images/magnifying_glass.png'\r\nimport doNotDisturb from '../../../assets/images/do_not_disturb.png'\r\n\r\nimport mainLink from '../../../assets/images/mainLink.png'\r\nimport website from '../../../assets/images/website.png'\r\nimport vk from '../../../assets/images/vk.png'\r\nimport twitter from '../../../assets/images/twitter.png'\r\nimport facebook from '../../../assets/images/facebook.png'\r\nimport instagram from '../../../assets/images/instagram.png'\r\nimport youtube from '../../../assets/images/youtube.png'\r\nimport github from '../../../assets/images/github.png'\r\n\r\nexport const contacts = {\r\n  \"mainLink\": mainLink,\r\n  \"website\": website,\r\n  \"vk\": vk,\r\n  \"twitter\": twitter,\r\n  \"facebook\": facebook,\r\n  \"instagram\": instagram,\r\n  \"youtube\": youtube,\r\n  \"github\": github\r\n}\r\n\r\nconst Contact = ({link, image}) => {\r\n  return <div className={s.imgPlusTextBlock}>    \r\n    <img className={s.smallIcon} src={image} alt='link-img' />\r\n    <span>{link || '-'}</span>\r\n  </div>\r\n}\r\n\r\nconst ProfileItem = ({value, image}) => {\r\n  return <Contact link={value} image={image} />\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, status, updateUserStatus, setEditMode}) => {\r\n  return <>\r\n    <div className={s.descriptionBlock}>\r\n      <div className={s.fullName}>\r\n        {profile.fullName}\r\n      </div>\r\n      <div className={s.aboutMe}>\r\n        {profile.aboutMe}\r\n      </div>\r\n      <div>\r\n        <ProfileStatusWithHooks status={status} updateUserStatus={updateUserStatus} />\r\n      </div>\r\n      <div>\r\n        {profile.lookingForAJob\r\n          ? <ProfileItem value={\"I'm looking for a job\"} image={magnifyingGlass} />\r\n          : <ProfileItem value={\"I'm not looking for a job\"} image={doNotDisturb} />\r\n        }\r\n      </div>\r\n      <div className={s.lookingForAJobDescription}>\r\n        {profile.lookingForAJobDescription}\r\n      </div>\r\n    </div>\r\n\r\n    <div className={s.contacts}>\r\n      <span className={s.contactsHeader}>Contacts:</span>\r\n      <div className={s.linksBlock}>\r\n        {Object.keys(profile.contacts).map(key => {\r\n          return <Contact link={profile.contacts[key]} image={contacts[key]} key={key} />\r\n        })}\r\n      </div>\r\n    </div>\r\n\r\n    {isOwner && <div><button onClick={setEditMode}>Edit</button></div>}\r\n  </>\r\n}\r\n\r\nconst ProfileInfo = ({profile, isOwner, savePhoto, saveProfile, status, updateUserStatus}) => {\r\n  \r\n  let [avatarFocused, setAvatarFocused] = useState(false);\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if(e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData)\r\n      .then(() => { setEditMode(false) })\r\n  }\r\n\r\n  if(!profile) {\r\n    return <Preloader />\r\n  }\r\n  \r\n  return (\r\n    <div className={s.profileInfoBlock}>\r\n\r\n      <div>\r\n        <div className={s.avatarBlock}\r\n             onMouseOver={() => { setAvatarFocused(true) }}\r\n             onMouseOut={() => { setAvatarFocused(false) }}>\r\n          <img className={s.avatar} src={profile.photos.large || userPhoto} alt=\"AVA\" />\r\n          {isOwner && avatarFocused && <input type='file' onChange={onMainPhotoSelected} />}\r\n        </div>\r\n      </div>\r\n\r\n      {editMode\r\n        ? <ProfileDataForm initialValues={profile}\r\n                           profile={profile}                           \r\n                           onSubmit={onSubmit}\r\n                           status={status}\r\n                           updateUserStatus={updateUserStatus} />\r\n        : <ProfileData profile={profile}\r\n                       isOwner={isOwner}\r\n                       status={status}\r\n                       updateUserStatus={updateUserStatus}\r\n                       setEditMode={ () => { setEditMode(true) } } />\r\n      }\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__x2kGV\",\"postsHeader\":\"MyPosts_postsHeader__fTmV9\",\"newPost\":\"MyPosts_newPost__gvA5f\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__kVGyH\"};","import React from \"react\";\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => { \r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"./images/Nickolai_avatar.jpg\" alt=\"AVA\" />\r\n      <span>{props.message}</span>\r\n      <button>{props.likesCount} 👍🏻</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { Textarea, createField } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst AddPostForm = ({handleSubmit}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.newPost}>\r\n      {createField(Textarea, [required, maxLength100], 'newPostText', 'Enter your post')}\r\n      <button>Add post</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({form: 'profileAddPostForm'})(AddPostForm);\r\n\r\nconst MyPosts = (props) => {\r\n  let postsElements = props.posts.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount} />);\r\n\r\n  let addNewPost = (formData) => {    \r\n    props.addPostClearForm(formData.newPostText);\r\n  }\r\n\r\n  return (\r\n    <div className={s.posts}>\r\n      <div className={s.postsHeader}>\r\n        <h3>MY POSTS</h3>        \r\n        <AddPostReduxForm onSubmit={addNewPost} />\r\n      </div>\r\n      {postsElements}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyPosts;","import { addPostClearForm } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts    \r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, { addPostClearForm })(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './PropfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile}\r\n                   status={props.status}\r\n                   updateUserStatus={props.updateUserStatus}\r\n                   isOwner={props.isOwner}\r\n                   savePhoto={props.savePhoto}\r\n                   saveProfile={props.saveProfile} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;","import {\r\n  useLocation,\r\n  useNavigate,\r\n  useParams\r\n} from \"react-router-dom\";\r\n\r\nfunction withRouter(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n    let location = useLocation();\r\n    let navigate = useNavigate();\r\n    let params = useParams();\r\n    return (\r\n      <Component\r\n        {...props}\r\n        router={{ location, navigate, params }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return ComponentWithRouterProp;\r\n}\r\n\r\nexport default withRouter;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile } from '../../redux/profile-reducer';\r\nimport withRouter from '../../ReactRouter/withRouter';\r\nimport { compose } from 'redux';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nclass ProfileContainer extends React.Component {\r\n  state = {\r\n    idIsNull: false\r\n  }\r\n\r\n  refreshProfile() {\r\n    const {router, authUserID, getUserProfile, getUserStatus} = this.props; \r\n    let userID = router.params.userID;\r\n    if (!userID) {\r\n      userID = authUserID;\r\n      if (!userID) {        \r\n        this.setState({ idIsNull: true });\r\n      }\r\n    }\r\n    \r\n    getUserProfile(userID);\r\n    getUserStatus(userID);\r\n  }\r\n\r\n  componentDidMount() {     \r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(this.props.router.params.userID !== prevProps.router.params.userID) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n  \r\n  render () {    \r\n    if(this.state.idIsNull) {\r\n      return <Navigate to={'/login'} />\r\n    }\r\n    \r\n    return <Profile {...this.props}\r\n                    isOwner={!this.props.router.params.userID} />\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authUserID: state.auth.userID\r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile }),\r\n  withRouter\r\n)(ProfileContainer);"],"names":["props","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","_jsxs","children","_jsx","className","s","onClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateUserStatus","reduxForm","form","enableReinitialize","destroyOnUnmount","_ref","handleSubmit","profile","error","onSubmit","createField","Input","type","Object","keys","contacts","map","key","src","alt","Contact","link","image","ProfileItem","_ref2","ProfileData","_ref3","isOwner","_Fragment","fullName","aboutMe","ProfileStatusWithHooks","lookingForAJob","magnifyingGlass","lookingForAJobDescription","_ref4","savePhoto","saveProfile","avatarFocused","setAvatarFocused","onMouseOver","onMouseOut","photos","large","userPhoto","target","files","length","ProfileDataForm","initialValues","formData","then","Preloader","message","likesCount","maxLength100","maxLengthCreator","AddPostReduxForm","Textarea","required","postsElements","posts","p","Post","id","addPostClearForm","newPostText","connect","state","profilePage","MyPosts","ProfileInfo","MyPostsContainer","Component","location","useLocation","navigate","useNavigate","params","useParams","_objectSpread","router","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","args","Array","_key","call","apply","concat","idIsNull","_createClass","_this$props","this","authUserID","getUserProfile","getUserStatus","userID","setState","refreshProfile","prevProps","Navigate","to","Profile","React","compose","auth","withRouter"],"sourceRoot":""}